From 9bbd9ee769abfcc37bc4900c9f4a61037aa627ac Mon Sep 17 00:00:00 2001
From: kindle4jerry <kindle4jerry@gmail.com>
Date: Mon, 17 Apr 2023 20:36:43 +0800
Subject: [PATCH] camera: Implement property to override default camera
 Complement to the frameworks/base patch.

---
 .../common/CameraProviderManager.cpp          | 22 +++++++++++++++++++
 1 file changed, 22 insertions(+)

diff --git a/services/camera/libcameraservice/common/CameraProviderManager.cpp b/services/camera/libcameraservice/common/CameraProviderManager.cpp
index 3132787..5e1ba96 100644
--- a/services/camera/libcameraservice/common/CameraProviderManager.cpp
+++ b/services/camera/libcameraservice/common/CameraProviderManager.cpp
@@ -36,6 +36,7 @@
 #include <functional>
 #include <camera_metadata_hidden.h>
 #include <android-base/parseint.h>
+#include <android-base/properties.h>
 #include <android-base/logging.h>
 #include <cutils/properties.h>
 #include <hwbinder/IPCThreadState.h>
@@ -210,6 +211,15 @@ std::vector<std::string> CameraProviderManager::getCameraDeviceIds(std::unordere
             }
         }
     }
+
+    int32_t altPrimaryCamera = property_get_int32("persist.sys.alt_primary_camera", 0);
+
+    if (altPrimaryCamera != 0 && deviceIds.size() > (size_t) altPrimaryCamera) {
+        const std::string origPrimary = deviceIds[0];
+        deviceIds[0] = deviceIds[altPrimaryCamera];
+        deviceIds[altPrimaryCamera] = origPrimary;
+    }
+
     return deviceIds;
 }
 
@@ -276,6 +286,18 @@ std::vector<std::string> CameraProviderManager::getAPI1CompatibleCameraDeviceIds
     std::sort(systemDeviceIds.begin(), systemDeviceIds.end(), sortFunc);
     deviceIds.insert(deviceIds.end(), publicDeviceIds.begin(), publicDeviceIds.end());
     deviceIds.insert(deviceIds.end(), systemDeviceIds.begin(), systemDeviceIds.end());
+
+    // Default camera ID hack should match with android.hardware.camera2.CameraManager.sortCameraIds
+    // Note that the alt primary camera may not be available here due to filterLogicalCameraIdsLocked()
+    // in which case we will just ignore it.
+    int altPrimaryCameraId = base::GetIntProperty("persist.sys.alt_primary_camera", -1);
+
+    if (altPrimaryCameraId > 0 && altPrimaryCameraId < (int) deviceIds.size()) {
+        std::string origPrimary = deviceIds[0];
+        deviceIds[0] = deviceIds[altPrimaryCameraId];
+        deviceIds[altPrimaryCameraId] = origPrimary;
+    }
+
     return deviceIds;
 }
 
-- 
2.25.1

