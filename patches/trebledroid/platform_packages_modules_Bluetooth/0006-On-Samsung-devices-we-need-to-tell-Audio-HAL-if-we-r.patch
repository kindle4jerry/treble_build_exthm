From 468d790425c6d3c3f50d285e5ff84a5343b2c028 Mon Sep 17 00:00:00 2001
From: kindle4jerry <kindle4jerry@gmail.com>
Date: Mon, 17 Apr 2023 21:20:19 +0800
Subject: [PATCH] On Samsung devices, we need to tell Audio HAL if we're 
 running narrow band or wide band

Change-Id: I22758558a109da911bdeb7465f325a58130bd3d2
---
 .../com/android/bluetooth/hfp/HeadsetStateMachine.java    | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/android/app/src/com/android/bluetooth/hfp/HeadsetStateMachine.java b/android/app/src/com/android/bluetooth/hfp/HeadsetStateMachine.java
index b237e7d..73579cb 100644
--- a/android/app/src/com/android/bluetooth/hfp/HeadsetStateMachine.java
+++ b/android/app/src/com/android/bluetooth/hfp/HeadsetStateMachine.java
@@ -147,6 +147,7 @@ public class HeadsetStateMachine extends StateMachine {
     // Audio Parameters
     private boolean mHasNrecEnabled = false;
     private boolean mHasWbsEnabled = false;
+    private int mReportScoSampleRate = 0;
     // AT Phone book keeps a group of states used by AT+CPBR commands
     @VisibleForTesting
     final AtPhonebook mPhonebook;
@@ -228,6 +229,7 @@ public class HeadsetStateMachine extends StateMachine {
         }
         mHasWbsEnabled = false;
         mHasNrecEnabled = false;
+        mReportScoSampleRate = 0;
     }
 
     public void dump(StringBuilder sb) {
@@ -457,6 +459,7 @@ public class HeadsetStateMachine extends StateMachine {
             mNeedDialingOutReply = false;
             mHasWbsEnabled = false;
             mHasNrecEnabled = false;
+            mReportScoSampleRate = 0;
             broadcastStateTransitions();
             // Remove the state machine for unbonded devices
             if (mPrevState != null
@@ -1542,6 +1545,9 @@ public class HeadsetStateMachine extends StateMachine {
                 + " hasNrecEnabled=" + mHasNrecEnabled
                 + " hasWbsEnabled=" + mHasWbsEnabled);
         am.setBluetoothHeadsetProperties(getCurrentDeviceName(), mHasNrecEnabled, mHasWbsEnabled);
+        if (mReportScoSampleRate > 0) {
+            am.setParameters("g_sco_samplerate=" + mReportScoSampleRate);
+        }
     }
 
     @VisibleForTesting
@@ -1685,10 +1691,12 @@ public class HeadsetStateMachine extends StateMachine {
         switch (wbsConfig) {
             case HeadsetHalConstants.BTHF_WBS_YES:
                 mHasWbsEnabled = true;
+                mReportScoSampleRate = 16000;
                 break;
             case HeadsetHalConstants.BTHF_WBS_NO:
             case HeadsetHalConstants.BTHF_WBS_NONE:
                 mHasWbsEnabled = false;
+                mReportScoSampleRate = 8000;
                 break;
             default:
                 Log.e(TAG, "processWBSEvent: unknown wbsConfig " + wbsConfig);
-- 
2.25.1

